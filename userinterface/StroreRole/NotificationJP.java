/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StroreRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Community.FamilyOrganization;
import Business.Organization.Community.StoreOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FamilyRefrigeratorWorkRequest;
import Business.WorkQueue.WorkRequest;
import Refrigerator.Product;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class NotificationJP extends javax.swing.JPanel {

    private StoreOrganization organization;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * Creates new form Notification
     */
    public NotificationJP(JPanel userProcessContainer, Enterprise enterprise, StoreOrganization organization,
            UserAccount userAccount, EcoSystem business) {
        initComponents();

        this.organization = organization;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business = business;

        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) notificationJTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest workRequ : organization.getWorkQueue().getWorkRequestList()) {

            Object[] row = new Object[2];
            row[0] = workRequ.getProudct();//do we have to mention name  here? we product in Work requesrt and product in product class seperately
            row[1] = workRequ;

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        notificationJTbl = new javax.swing.JTable();
        sendOffer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        notificationJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Product", "From"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(notificationJTbl);
        if (notificationJTbl.getColumnModel().getColumnCount() > 0) {
            notificationJTbl.getColumnModel().getColumn(0).setResizable(false);
            notificationJTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 120, 530, 89);

        sendOffer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/StroreRole/cart.png"))); // NOI18N
        sendOffer.setText("Send Offer");
        sendOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendOfferActionPerformed(evt);
            }
        });
        add(sendOffer);
        sendOffer.setBounds(60, 230, 110, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/StroreRole/back-icon.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(10, 470, 100, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/StroreRole/roban.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(-40, -10, 390, 110);
    }// </editor-fold>//GEN-END:initComponents

    private void sendOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendOfferActionPerformed
        // TODO add your handling code here:
        int row = notificationJTbl.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            WorkRequest workRequ = (WorkRequest) notificationJTbl.getValueAt(row, 1);
            Product product = organization.getStoreRefrigerator().getProductDirectory().searchProduct(workRequ.getProudct().getName());

            if (product != null) {
                FamilyRefrigeratorWorkRequest notification = new FamilyRefrigeratorWorkRequest();
                notification.setSender(userAccount);
                notification.setProudct(product);
                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof FamilyOrganization) {
                        org = organization;
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(notification);

                }
                JOptionPane.showMessageDialog(null, "The Offer has been sent. ", "Information", JOptionPane.INFORMATION_MESSAGE);
                organization.getWorkQueue().removeWorkRequest(workRequ);
                populateRequestTable();

            } else {

                JOptionPane.showMessageDialog(null, "We Dont have this proudct.", "Information", JOptionPane.INFORMATION_MESSAGE);

                organization.getWorkQueue().removeWorkRequest(workRequ);
                populateRequestTable();
                return;
            }
        }

    }//GEN-LAST:event_sendOfferActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable notificationJTbl;
    private javax.swing.JButton sendOffer;
    // End of variables declaration//GEN-END:variables
}
