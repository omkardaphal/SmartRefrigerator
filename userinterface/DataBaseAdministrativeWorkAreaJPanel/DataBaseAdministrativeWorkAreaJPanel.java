/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.DataBaseAdministrativeWorkAreaJPanel;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;

import Business.Organization.Organization;
import Business.Organization.HealthCare.DataBaseAdministrative;
import Business.Organization.HealthCare.LabOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DataBaseWorkRequest;
import Business.WorkQueue.LabWorkRequest;
import Business.WorkQueue.WorkRequest;
import Refrigerator.ConsumedProudcts;
import Refrigerator.Product;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class DataBaseAdministrativeWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private DataBaseAdministrative dBrganization;
    private ConsumedProudcts consumedProudcts;
    private Enterprise enterprise;
    private String result1;
     String id;

    /**
     * Creates new form DataBaseAdministrativeWorkAreaJPanel
     */
    public DataBaseAdministrativeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,
            Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise = enterprise;
        this.dBrganization = (DataBaseAdministrative) organization;

        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : dBrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request.getFamilyID();
            row[1] = request;
            row[2] = request.getStatus();
            row[3] = request.getResult();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        serachBtn = new javax.swing.JButton();
        sendResultBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setBackground(new java.awt.Color(198, 198, 198));
        setLayout(null);

        serachBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        serachBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DataBaseAdministrativeWorkAreaJPanel/Windows-Magnifier-icon.png"))); // NOI18N
        serachBtn.setText("Search");
        serachBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        serachBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serachBtnActionPerformed(evt);
            }
        });
        add(serachBtn);
        serachBtn.setBounds(40, 210, 100, 23);

        sendResultBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        sendResultBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DataBaseAdministrativeWorkAreaJPanel/ok-icon (1).png"))); // NOI18N
        sendResultBtn.setText("Send Result");
        sendResultBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sendResultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendResultBtnActionPerformed(evt);
            }
        });
        add(sendResultBtn);
        sendResultBtn.setBounds(40, 250, 100, 23);

        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Family ID", "Sender", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable);

        add(jScrollPane3);
        jScrollPane3.setBounds(30, 90, 530, 110);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DataBaseAdministrativeWorkAreaJPanel/dna.jpg"))); // NOI18N
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(jLabel2);
        jLabel2.setBounds(-260, -100, 1000, 680);
    }// </editor-fold>//GEN-END:initComponents

    private void sendResultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendResultBtnActionPerformed
        // TODO add your handling code here:  

        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest req = (WorkRequest) workRequestJTable.getValueAt(row, 1);
        consumedProudcts = req.getProductDirectory();

        DataBaseWorkRequest request = new DataBaseWorkRequest();
        request.setFamilyID(req.getFamilyID());
        request.setMessage("Gene History ");
        request.setSender(userAccount);
        request.setStatus("Complete");
        request.setProductDirectory(consumedProudcts);
        request.setResult(result1);
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof LabOrganization) {
                org = organization;

                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
           // userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        JOptionPane.showMessageDialog(null, " Result sent Successfully!! ", "Information", JOptionPane.INFORMATION_MESSAGE);
        dBrganization.getWorkQueue().removeWorkRequest(req);
        populateTable();
    }//GEN-LAST:event_sendResultBtnActionPerformed

    private void serachBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serachBtnActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest req = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 1);
        if (req.getResult() == null) {
            result1 = dBrganization.matchGene();

            req.setResult(result1);
            req.setStatus("Done");

            populateTable();
        } else {

            JOptionPane.showMessageDialog(null, "Gene History found !!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }


    }//GEN-LAST:event_serachBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton sendResultBtn;
    private javax.swing.JButton serachBtn;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
