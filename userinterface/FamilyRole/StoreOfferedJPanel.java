/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FamilyRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Community.FamilyOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.StoreRefrigeratorWorkRequest;
import Business.WorkQueue.WorkRequest;
import Refrigerator.Product;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import java.util.Random;

/**
 *
 * @author MAC
 */
public class StoreOfferedJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private FamilyOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * /**
     * Creates new form StoreOfferedJPanel
     */
    public StoreOfferedJPanel(JPanel userProcessContainer, Enterprise enterprise, FamilyOrganization organization, UserAccount account, EcoSystem business) {
        initComponents();
        this.organization = organization;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) storeOfferJTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest workRequ : organization.getWorkQueue().getWorkRequestList()) {

            Object[] row = new Object[3];
            row[0] = workRequ.getProudct();//do we have to mention name  here? we product in Work requesrt and product in product class seperately
            row[1] = getOffer();
            row[2] = workRequ;
          

            model.addRow(row);
        }
    }

    public String getOffer() {

        Random rand = new Random();
        String[] name = {"30% Off", "20% Off", "15% Off", "Buy 1 Get 1", "12% Off", "Buy 2 Get 1"};

        String n = name[rand.nextInt(name.length)];

        return n;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProductBtn = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeOfferJTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        addProductBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/Button-Add-icon.png"))); // NOI18N
        addProductBtn.setText("Add Product");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });
        add(addProductBtn);
        addProductBtn.setBounds(20, 220, 120, 25);

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/back-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(0, 471, 90, 30);

        storeOfferJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product", "Offer", "Frome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeOfferJTbl);
        if (storeOfferJTbl.getColumnModel().getColumnCount() > 0) {
            storeOfferJTbl.getColumnModel().getColumn(0).setResizable(false);
            storeOfferJTbl.getColumnModel().getColumn(1).setResizable(false);
            storeOfferJTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(5, 100, 550, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/roban.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(-40, 0, 510, 80);
    }// </editor-fold>//GEN-END:initComponents

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed
        // TODO add your handling code here:

        int row = storeOfferJTbl.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Product p = (Product) storeOfferJTbl.getValueAt(row, 0);
        int quntiNumber = p.getStock();
        p.setStock(++quntiNumber);
        organization.getHomeRefrigerator().getProductDirectory().addConsumedProduct(p);
        JOptionPane.showMessageDialog(null, "(" + p.getName() + ") \n added to Refrigerator Successfully!! ", "Information", JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_addProductBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

          userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        FamilyRefrigeratorWorkQueue familyRef =(FamilyRefrigeratorWorkQueue) component;
        familyRef.populateTable();
        CardLayout layout=  (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);  // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductBtn;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable storeOfferJTbl;
    // End of variables declaration//GEN-END:variables
}
