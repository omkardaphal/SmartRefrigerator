/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FamilyRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Community.FamilyOrganization;
import Business.Organization.HealthCare.LabOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javafx.scene.paint.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JSlider;
/*import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;*/

import Business.Results.Result;
import Business.Results.ResultsDir;

/**
 *
 * @author lenovo
 */
public class FamliyHealthStutes extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private FamilyOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    ResultsDir resultsDir ;
    String status;

    /**
     * Creates new form FamliyHealthStutes
     */
    public FamliyHealthStutes(JPanel userProcessContainer, Enterprise enterprise, FamilyOrganization organization,
            UserAccount account, EcoSystem business) {
        initComponents();

        this.organization = organization;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        
        populateTable();
        if(resultsDir !=null){
        populateResultTable();
        }
    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) result.getModel();

        model.setRowCount(0);

        for (WorkRequest workRequ : userAccount.getWorkQueue().getWorkRequestList()) {
if(userAccount.getUsername().equals(workRequ.getFamilyID())){
            Object[] row = new Object[2];
            row[0] = userAccount;//do we have to mention name  here? we product in Work requesrt and product in product class seperately
           
            
            if (workRequ.getResultsDir() != null) {
                
                resultsDir = workRequ.getResultsDir();
              for (Result result : resultsDir.getResultList()){
                  if(result.getId().equals(workRequ.getFamilyID()))
                 status= result.getStatus();
              }  
            }
            row[1] = status;

            model.addRow(row);

        }
        }
    }

    public void populateResultTable() {

        DefaultTableModel model = (DefaultTableModel) totalButton.getModel();

        model.setRowCount(0);

        for (Result result : resultsDir.getResultList()) {
if(result.getId().equals(userAccount.getUsername())){
            Object[] row = new Object[8];
            row[0] = result.getTotalFat();//do we have to mention name  here? we product in Work requesrt and product in product class seperately
            row[1] = result.getTotalCholestrol();
            row[2] = result.getTotalSodium();
            row[3] = result.getTotalPotasium();
            row[4] = result.getTotalCarbohydrate();
            row[5] = result.getTotalProtien();
            row[6] = result.getTotalCalcium();
            row[7] = result.getTotalSugar();

            model.addRow(row);
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        result = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        totalButton = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/back-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(580, 500, 90, 30);

        result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(result);

        add(jScrollPane2);
        jScrollPane2.setBounds(30, 250, 580, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/roban.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(-40, 0, 380, 90);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/chartbg.jpg"))); // NOI18N
        jLabel2.setToolTipText("");
        add(jLabel2);
        jLabel2.setBounds(10, 260, 540, 320);

        totalButton.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Total Fat", "Total Colestrol", "Total Sodium", "Total Potasium", "Total Carbohydrates", "Total Proteins", "Total Calcium", "Total Sugar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(totalButton);
        if (totalButton.getColumnModel().getColumnCount() > 0) {
            totalButton.getColumnModel().getColumn(0).setResizable(false);
            totalButton.getColumnModel().getColumn(1).setResizable(false);
            totalButton.getColumnModel().getColumn(2).setResizable(false);
            totalButton.getColumnModel().getColumn(3).setResizable(false);
            totalButton.getColumnModel().getColumn(4).setResizable(false);
            totalButton.getColumnModel().getColumn(5).setResizable(false);
            totalButton.getColumnModel().getColumn(6).setResizable(false);
            totalButton.getColumnModel().getColumn(7).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 120, 660, 90);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable result;
    private javax.swing.JTable totalButton;
    // End of variables declaration//GEN-END:variables
}
