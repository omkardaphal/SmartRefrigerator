/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FamilyRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HealthcareCenter.HealthCareCenterEnterprise;
import Business.Network.Network;
import Business.Organization.Community.FamilyOrganization;
import Business.Organization.Community.StoreOrganization;
import Business.Organization.HealthCare.ResearchOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FamilyHealthWorkRequest;
import Business.WorkQueue.StoreRefrigeratorWorkRequest;
import Refrigerator.Product;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class FamilyRefrigeratorWorkQueue extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private FamilyOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * Creates new form FamilyRefrigeratorWorkQueue
     */
    public FamilyRefrigeratorWorkQueue(JPanel userProcessContainer, Enterprise enterprise, FamilyOrganization organization,
            UserAccount account, EcoSystem business) {
        initComponents();
        this.organization = organization;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        populateTable();
    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) familyRefrigeratorJTable.getModel();

        model.setRowCount(0);

        for (Product prpudct : organization.getHomeRefrigerator().getProductDirectory().getProductList()) {
            Object[] row = new Object[5];
            row[0] = prpudct;
            row[1] = prpudct.getStock();
            row[2] = prpudct.getPrice();
            row[3] = prpudct.getExpirationDate();
            row[4] = prpudct.getOffer();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        familyRefrigeratorJTable = new javax.swing.JTable();
        pickButton = new javax.swing.JButton();
        seeOffersJButton = new javax.swing.JButton();
        sendInfoJButton = new javax.swing.JButton();
        discardExpirationProduct = new javax.swing.JButton();
        myHealthStatusJButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel3.setText("jLabel3");

        setLayout(null);

        familyRefrigeratorJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(familyRefrigeratorJTable);
        if (familyRefrigeratorJTable.getColumnModel().getColumnCount() > 0) {
            familyRefrigeratorJTable.getColumnModel().getColumn(0).setResizable(false);
            familyRefrigeratorJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(17, 130, 530, 90);

        pickButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/ok-icon (1).png"))); // NOI18N
        pickButton.setText("Pick");
        pickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickButtonActionPerformed(evt);
            }
        });
        add(pickButton);
        pickButton.setBounds(71, 310, 90, 20);

        seeOffersJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/Files-Edit-file-icon (1).png"))); // NOI18N
        seeOffersJButton.setText("See Offers");
        seeOffersJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeOffersJButtonActionPerformed(evt);
            }
        });
        add(seeOffersJButton);
        seeOffersJButton.setBounds(55, 340, 130, 20);

        sendInfoJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/ok-icon (1).png"))); // NOI18N
        sendInfoJButton.setText("Send My Information to Health Care Center");
        sendInfoJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendInfoJButtonActionPerformed(evt);
            }
        });
        add(sendInfoJButton);
        sendInfoJButton.setBounds(0, 430, 270, 20);

        discardExpirationProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/bin-2-icon.png"))); // NOI18N
        discardExpirationProduct.setText("Reset Consumed Product");
        discardExpirationProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardExpirationProductActionPerformed(evt);
            }
        });
        add(discardExpirationProduct);
        discardExpirationProduct.setBounds(27, 400, 190, 20);

        myHealthStatusJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/reports-icon.png"))); // NOI18N
        myHealthStatusJButton.setText("My Health Status");
        myHealthStatusJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myHealthStatusJButtonActionPerformed(evt);
            }
        });
        add(myHealthStatusJButton);
        myHealthStatusJButton.setBounds(45, 370, 150, 20);

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/back-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton);
        backButton.setBounds(0, 470, 90, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/roban.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(-40, -90, 430, 270);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/FamilyRole/insideref2.jpg"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(-130, -30, 740, 530);

        jButton1.setText("jButton1");
        add(jButton1);
        jButton1.setBounds(200, 270, 73, 23);

        jButton2.setText("jButton2");
        add(jButton2);
        jButton2.setBounds(440, 50, 73, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void pickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickButtonActionPerformed
        // TODO add your handling code here:
        /* write the code which is showing count fuction
that whenever we pich something it counts and when we rech to some amount it sends notification*/

        int row = familyRefrigeratorJTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Product p = (Product) familyRefrigeratorJTable.getValueAt(row, 0);
        int aviliNam = p.getStock();
        int conNumber = p.getConsumedNumber();
        p.setConsumedNumber(++conNumber);
        p.setStock(--aviliNam);
        populateTable();
        Product consumedp = organization.getHomeRefrigerator().getConsumedProduct().searchProduct(p.getName());
        if (consumedp == null) {
            organization.getHomeRefrigerator().getConsumedProduct().addConsumedProduct(p);
        } else {
            organization.getHomeRefrigerator().getConsumedProduct().removeProduct(consumedp);
            organization.getHomeRefrigerator().getConsumedProduct().addConsumedProduct(p);
        }

        if (p.getStock() == 0) {
            organization.getHomeRefrigerator().getProductDirectory().removeProduct(p);
            populateTable();
            JOptionPane.showMessageDialog(null, "You run out of :( " + p.getName() + " ) \n The notification has been sent to Store ", "Information", JOptionPane.INFORMATION_MESSAGE);
            StoreRefrigeratorWorkRequest notification = new StoreRefrigeratorWorkRequest();
            notification.setSender(userAccount);//we should pass userAccount of home refrigerator(sender)object
            notification.setStatus("Sent");
            notification.setProudct(p);
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof StoreOrganization) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(notification);

            }

        } else {
            return;
        }

    }//GEN-LAST:event_pickButtonActionPerformed


    private void sendInfoJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendInfoJButtonActionPerformed
        // TODO add your handling code here:
        FamilyHealthWorkRequest request = new FamilyHealthWorkRequest();

        request.setSender(userAccount);
        request.setStatus("InComplete");
        request.setProductDirectory(organization.getHomeRefrigerator().getConsumedProduct());
        request.setFamilyID(userAccount.getUsername());

        Organization org = null;

        for (Network net : business.getNetworkList()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof HealthCareCenterEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof ResearchOrganization) {
                            org = organization;
                            break;
                        }
                    }
                }

            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
          //  userAccount.getWorkQueue().getWorkRequestList().add(request);
        }

        JOptionPane.showMessageDialog(null, "Information has been sent to health care center ", "Informaton", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_sendInfoJButtonActionPerformed

    private void seeOffersJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeOffersJButtonActionPerformed
        // TODO add your handling code here:

        StoreOfferedJPanel panel = new StoreOfferedJPanel(userProcessContainer, enterprise, organization,
                userAccount, business);

        userProcessContainer.add("StoreOfferedJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_seeOffersJButtonActionPerformed

    private void discardExpirationProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardExpirationProductActionPerformed
        // TODO add your handling code here:
        
          for(Product p:organization.getHomeRefrigerator().getConsumedProduct().getProductList()){
  organization.getHomeRefrigerator().getConsumedProduct().removeProduct(p);
  
  }
          JOptionPane.showMessageDialog(null, "Consumed Product Reset!!", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_discardExpirationProductActionPerformed

    private void myHealthStatusJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myHealthStatusJButtonActionPerformed
        // TODO add your handling code here:
        FamliyHealthStutes panel = new FamliyHealthStutes(userProcessContainer, enterprise, organization,
                userAccount, business);

        userProcessContainer.add("FamliyHealthStutes", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_myHealthStatusJButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton discardExpirationProduct;
    private javax.swing.JTable familyRefrigeratorJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton myHealthStatusJButton;
    private javax.swing.JButton pickButton;
    private javax.swing.JButton seeOffersJButton;
    private javax.swing.JButton sendInfoJButton;
    // End of variables declaration//GEN-END:variables
}
